name: Release to production
on:
  push:
    tags:
      - 'v*'
env:
  MANIFESTS_REPO: "voiapp/argo-cd-apps"
  MANIFESTS_REPO_BRANCH: "main"

jobs:
  image_create:
    name: Create image
    runs-on: ubuntu-latest

    outputs:
      short_sha: ${{ steps.get_sha.outputs.short_sha }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create image
      shell: bash
      run: |
        echo "${{ secrets.GCLOUD_SERVICE_ACCOUNT }}" | base64 -d | docker login -u _json_key --password-stdin https://eu.gcr.io
        DOCKER_TOOLS=true TAG_NAME=$(basename ${GITHUB_REF}) make push

    - name: Get short SHA
      id: get_sha
      shell: bash
      run: echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"

  deploy:
    needs: image_create
    name: Deploy to dev, stage, load
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        repository: ${{ env.MANIFESTS_REPO }}
        ref: ${{ env.MANIFESTS_REPO_BRANCH }}
        ssh-key: ${{ secrets.ARGO_CD_APPS_REPO_TOKEN }}

    - name: Release code to dev, stage, load
      uses: voiapp/actions/argo-cd-release-staging@master
      with:
        short-sha: ${{needs.image_create.outputs.short_sha}}
        environment: 'dev, stage, load'

  prod_deploy:
    needs: image_create
    name: Deploy to prod (PR approval required)
    runs-on: ubuntu-latest

    steps:
    - name: Checkout manifest code
      uses: actions/checkout@v2
      with:
        repository: ${{ env.MANIFESTS_REPO }}
        ref: ${{ env.MANIFESTS_REPO_BRANCH }}
        ssh-key: ${{ secrets.ARGO_CD_APPS_REPO_TOKEN }}

    - name: Release code
      uses: voiapp/actions/argo-cd-release-production@master
      with:
        github-pat: ${{ secrets.BENDER_PAT }}
        short-sha: ${{needs.image_create.outputs.short_sha}}
